public data class {{simplename}}(
{{#fields}}
    @JvmField val {{name}}: {{type}},
{{/fields}}
{{#parent}}
) : {{.}} {
{{/parent}}
{{^parent}}
) {
{{/parent}}

    public fun write(writer: IonWriter) {
        writer.addTypeAnnotation(tag)
        writer.stepIn(IonType.SEXP)
        {{#fields}}
        writer.writeInt(1L) // TODO
        {{/fields}}
        writer.stepOut()
    }

    public companion object {

        @JvmStatic
        private val tag: String = "{{tag}}"

        @JvmStatic
        public fun read(reader: IonReader): {{simplename}} {
            val tags = reader.typeAnnotations
            assert(tags.size == 1) { "Expected a single annotation `$tag`" }
            assert(tags[0] == tag) { "Expected tag `$tag`, found `${tags[0]}`" }
            reader.stepIn()
            // TODO
            reader.stepOut()
            return {{simplename}}()
        }
    }
}
