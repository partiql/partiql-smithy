public enum class {{name}} : {{parent}} {
    {{#values}}
    {{.}},
    {{/values}}
    ;

    public override fun write(writer: IonWriter) {
        {{#tag}}
        writer.stepIn(IonType.SEXP)
        writer.writeInt(TAG)
        {{/tag}}
        writer.writeSymbol(name)
        {{#tag}}
        writer.stepOut()
        {{/tag}}
    }

    public companion object {

        {{#tag}}
        public const val TAG: Long = {{.}}
        {{/tag}}

        @JvmStatic
        public fun read(reader: IonReader): {{name}} = try {
            {{name}}.valueOf(reader.symbolValue().text)
        } catch (ex: IllegalArgumentException) {
            // TODO error messaging
            throw ex
        }
    }
}
